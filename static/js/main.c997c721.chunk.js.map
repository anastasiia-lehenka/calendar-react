{"version":3,"sources":["components/UsersSelect/UsersSelect.jsx","UserContext.js","components/Event/Event.jsx","constants.js","components/CalendarTable/CalendarTable.jsx","components/modals/DeleteModal/DeleteModal.jsx","pages/calendar/Calendar.jsx","pages/calendar/index.js","components/UsersSelect/index.js","components/ValidationAlert/ValidationAlert.jsx","components/ValidationAlert/index.js","pages/createEvent/CreateEvent.jsx","pages/createEvent/index.js","components/Notification/Notification.jsx","components/Notification/index.js","components/modals/AuthModal/AuthModal.jsx","components/modals/AuthModal/index.js","services/Service.js","services/NotificationsDecorator.js","App.jsx","services/sessionStorageApi.js","index.jsx"],"names":["UsersSelect","users","hasDefaultOption","multiple","onChange","className","required","value","Form","Control","as","custom","aria-describedby","map","user","name","Text","id","muted","React","memo","createContext","Event","onDeleteEvent","eventData","useContext","UserContext","currentUser","admin","Button","variant","onClick","DAYS","TIMESLOTS","USER_STORAGE_KEY","HOMEPAGE","notificationTypes","CalendarTable","events","getEvent","useCallback","allEvents","day","time","find","userEvent","Table","bordered","timeslot","DeleteModal","event","deleteEvent","cancelDelete","Modal","show","centered","onHide","Header","closeButton","Title","Body","Footer","Calendar","eventToDelete","showDeleteModal","logOut","filterUsers","filter","Container","fluid","Row","Col","size","xs","md","to","role","ValidationAlert","onAlertDismiss","Alert","dismissible","onClose","CreateEvent","createEvent","isExistingEvent","useState","participants","setEventData","isAlertShown","setIsAlertShown","isButtonDisabled","setIsButtonDisabled","history","useHistory","submitForm","e","a","preventDefault","push","onFieldChange","prevValue","target","onSubmit","Group","controlId","Label","column","sm","type","maxLength","span","offset","disabled","Notification","data","setShow","Toast","delay","autohide","color","toUpperCase","text","AuthModal","confirmAuth","chosenUser","setChosenUser","useEffect","onSelectChange","selectedName","selectedUser","backdrop","keyboard","service","Service","instance","this","url","eventsEntity","usersEntity","method","entity","fetch","body","JSON","stringify","headers","response","ok","message","status","Error","sendHttpRequest","json","Object","assign","parse","userData","freeze","serviceInstance","getUsers","notification","uuidv4","getEvents","eventId","App","setEvents","setUsers","notifications","setNotifications","setEventToDelete","setCurrentUser","setFilter","authorizedUser","sessionStorage","getItem","length","setItem","setUserData","removeItem","filterValue","currentUserValue","useMemo","filteredEvents","includes","path","Provider","eventDay","eventTime","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c997c721.chunk.js","sourcesContent":["import React from 'react';\nimport { Form } from 'react-bootstrap';\n\nconst UsersSelect = ({\n  users,\n  hasDefaultOption,\n  multiple,\n  onChange,\n  className,\n  required,\n  value,\n}) => (\n  <>\n    <Form.Control\n      as=\"select\"\n      custom\n      aria-describedby=\"selectHelpBlock\"\n      className={className}\n      onChange={onChange}\n      multiple={multiple}\n      required={required}\n      value={value}\n    >\n      { hasDefaultOption && <option value=\"All members\">All members</option>}\n      { users && users.map((user) => <option key={user.name} value={user.name}>{user.name}</option>)}\n    </Form.Control>\n    { multiple && (\n      <Form.Text id=\"selectHelpBlock\" muted>\n        Press Ctrl to choose multiple participants.\n      </Form.Text>\n    )}\n  </>\n);\n\nexport default React.memo(UsersSelect);\n","import { createContext } from 'react';\n\nexport default createContext(null);\n","import React, { useContext } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { X } from 'react-bootstrap-icons';\nimport UserContext from '../../UserContext';\nimport './styles.scss';\n\nconst Event = ({ onDeleteEvent, eventData }) => {\n  const [currentUser] = useContext(UserContext);\n\n  return (\n    <div className=\"event\">\n      <span className=\"event__name\">{eventData.name}</span>\n      { currentUser.admin && (\n        <Button className=\"event__delete-button\" variant=\"transparent\" onClick={() => onDeleteEvent(eventData)}>\n          <X className=\"icon\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default React.memo(Event);\n","export const DAYS = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'];\nexport const TIMESLOTS = [\n  '10.00',\n  '11.00',\n  '12.00',\n  '13.00',\n  '14.00',\n  '15.00',\n  '16.00',\n  '17.00',\n  '18.00',\n];\nexport const USER_STORAGE_KEY = 'user';\nexport const SERVER_URL = 'http://158.101.166.74:8080/api/data/anastasiia_lehenka';\nexport const HOMEPAGE = 'calendar-react';\nexport const notificationTypes = {\n  success: 'success',\n  error: 'error',\n};\n","import React, { useCallback } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Event from '../Event/Event';\nimport { DAYS, TIMESLOTS } from '../../constants';\nimport './styles.scss';\n\nconst CalendarTable = ({\n  events,\n  onDeleteEvent,\n}) => {\n  const getEvent = useCallback((allEvents, day, time) => (\n    allEvents && allEvents.find((userEvent) => userEvent.day === day && userEvent.time === time)), []);\n\n  return (\n    <Table className=\"calendar-table\" bordered>\n      <thead className=\"calendar-table__header\">\n        <tr className=\"calendar-table__row\">\n          <th className=\"calendar-table__cell calendar-table__cell--heading\">Name</th>\n          {DAYS.map((day) => (\n            <th className=\"calendar-table__cell calendar-table__cell--heading\" key={day}>{day}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {TIMESLOTS.map((timeslot) => (\n          <tr className=\"calendar-table__row\" key={timeslot}>\n            <th className=\"calendar-table__cell calendar-table__cell--heading\" key={timeslot}>{timeslot}</th>\n            {DAYS.map((day) => (\n              <td className={\n                  getEvent(events, day, timeslot)\n                    ? 'calendar-table__cell calendar-table__cell--event'\n                    : 'calendar-table__cell'\n              }\n                key={day}\n              >\n                { getEvent(events, day, timeslot) && (\n                  <Event\n                    eventData={getEvent(events, day, timeslot)}\n                    onDeleteEvent={onDeleteEvent}\n                  />\n                )}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default React.memo(CalendarTable);\n","import React from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\nconst DeleteModal = ({ event, deleteEvent, cancelDelete }) => (\n  <Modal\n    show\n    centered\n    onHide={cancelDelete}\n  >\n    <Modal.Header closeButton>\n      <Modal.Title>Delete event</Modal.Title>\n    </Modal.Header>\n\n    <Modal.Body>\n      {/* eslint-disable-next-line react/jsx-one-expression-per-line */}\n      <p>Are you sure you want to delete \"{event.name}\" event?</p>\n    </Modal.Body>\n\n    <Modal.Footer>\n      <Button variant=\"secondary\" onClick={cancelDelete}>No</Button>\n      <Button variant=\"primary\" onClick={() => deleteEvent(event.id)}>Yes</Button>\n    </Modal.Footer>\n  </Modal>\n);\n\nexport default DeleteModal;\n","import React, { useContext } from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport UsersSelect from '../../components/UsersSelect/UsersSelect';\nimport CalendarTable from '../../components/CalendarTable/CalendarTable';\nimport DeleteModal from '../../components/modals/DeleteModal/DeleteModal';\nimport UserContext from '../../UserContext';\nimport { HOMEPAGE } from '../../constants';\nimport './styles.scss';\n\nconst Calendar = ({\n  users,\n  events,\n  eventToDelete,\n  showDeleteModal,\n  deleteEvent,\n  cancelDelete,\n  logOut,\n  filterUsers,\n  filter,\n}) => {\n  const [currentUser] = useContext(UserContext);\n\n  return (\n    <>\n      <Container fluid className=\"wrapper pt-3\">\n        <Row className=\"mb-3\">\n          <Col className=\"auth-info d-flex justify-content-end align-items-center\">\n            {/* eslint-disable-next-line react/jsx-one-expression-per-line */}\n            <p>You are logged in as <strong>{currentUser.name}</strong></p>\n            <Button variant=\"danger\" size=\"sm\" onClick={logOut}>Logout</Button>\n          </Col>\n        </Row>\n        <Row className=\"mb-4\">\n          <Col xs={12} md={6}>\n            <h2 className=\"heading mb-3 mb-md-0\">Calendar</h2>\n          </Col>\n          <Col xs={12} md={6}>\n            <div className=\"d-flex justify-content-md-end\">\n              <UsersSelect\n                className=\"users-select\"\n                users={users}\n                onChange={filterUsers}\n                value={filter}\n                hasDefaultOption\n              />\n              {currentUser.admin && (\n              <Link to={`/${HOMEPAGE}/create-event`}>\n                <Button className=\"new-event-button btn-light\"\n                  variant=\"outline-secondary\"\n                  role=\"button\"\n                >\n                  New event +\n                </Button>\n              </Link>\n              )}\n            </div>\n          </Col>\n        </Row>\n        <CalendarTable\n          events={events}\n          onDeleteEvent={showDeleteModal}\n        />\n      </Container>\n      { eventToDelete && <DeleteModal event={eventToDelete} deleteEvent={deleteEvent} cancelDelete={cancelDelete} />}\n    </>\n  );\n};\n\nexport default React.memo(Calendar);\n","import Calendar from './Calendar';\n\nexport default Calendar;\n","import UsersSelect from './UsersSelect';\n\nexport default UsersSelect;\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\nimport { XCircleFill } from 'react-bootstrap-icons';\nimport './styles.scss';\n\nconst ValidationAlert = ({ onAlertDismiss }) => (\n  <Alert className=\"alert mb-5\" variant=\"danger\" dismissible onClose={onAlertDismiss}>\n    <XCircleFill className=\"alert__cross-icon\" />\n    <span>Failed to create an event. Time slot is already booked.</span>\n  </Alert>\n);\n\nexport default React.memo(ValidationAlert);\n","import ValidationAlert from './ValidationAlert';\n\nexport default ValidationAlert;\n","import React, { useState, useCallback } from 'react';\nimport {\n  Container,\n  Form,\n  Row,\n  Col,\n  Button,\n} from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport UsersSelect from '../../components/UsersSelect';\nimport ValidationAlert from '../../components/ValidationAlert';\nimport { DAYS, TIMESLOTS, HOMEPAGE } from '../../constants';\nimport './styles.scss';\n\nconst CreateEvent = ({ users, createEvent, isExistingEvent }) => {\n  const [eventData, setEventData] = useState({\n    name: '',\n    participants: [],\n    day: DAYS[0],\n    time: TIMESLOTS[0],\n  });\n  const [isAlertShown, setIsAlertShown] = useState(false);\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n  const history = useHistory();\n\n  const submitForm = async (e) => {\n    e.preventDefault();\n    setIsAlertShown(false);\n\n    if (!isExistingEvent(eventData.day, eventData.time)) {\n      setIsButtonDisabled(true);\n      const event = await createEvent(eventData);\n      setIsButtonDisabled(false);\n\n      if (event) {\n        history.push(`/${HOMEPAGE}/calendar`);\n      }\n    } else {\n      setIsAlertShown(true);\n    }\n  };\n\n  const onFieldChange = (e) => {\n    setIsAlertShown(false);\n    setEventData((prevValue) => ({\n      ...prevValue,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  const onAlertDismiss = useCallback(() => {\n    setIsAlertShown(false);\n  }, []);\n\n  return (\n    <>\n      <Container className=\"create-event-form py-5 px-3\">\n        { isAlertShown && <ValidationAlert onAlertDismiss={onAlertDismiss} /> }\n        <Form onSubmit={submitForm}>\n          <Form.Group as={Row} className=\"mb-3\" controlId=\"formGridText\">\n            <Form.Label column sm=\"4\" md=\"3\">Name of the event:</Form.Label>\n            <Col sm=\"8\" md=\"5\">\n              <Form.Control\n                type=\"text\"\n                name=\"name\"\n                value={eventData.name}\n                onChange={onFieldChange}\n                required\n                maxLength=\"50\"\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} className=\"mb-3\">\n            <Form.Label column sm=\"4\" md=\"3\">Participants:</Form.Label>\n            <Col sm=\"8\" md=\"5\">\n              <UsersSelect name=\"participants\" users={users} multiple onChange={onFieldChange} required />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} className=\"mb-3\">\n            <Form.Label column sm=\"4\" md=\"3\">Day:</Form.Label>\n            <Col sm=\"8\" md=\"5\">\n              <Form.Control as=\"select\" name=\"day\" value={eventData.day} onChange={onFieldChange} custom>\n                { DAYS.map((day) => <option key={day} value={day}>{day}</option>)}\n              </Form.Control>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} className=\"mb-5\">\n            <Form.Label column sm=\"4\" md=\"3\">Time:</Form.Label>\n            <Col sm=\"8\" md=\"5\">\n              <Form.Control as=\"select\" name=\"time\" value={eventData.time} onChange={onFieldChange} custom>\n                { TIMESLOTS.map((timeslot) => <option key={timeslot} value={timeslot}>{timeslot}</option>)}\n              </Form.Control>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Col xs=\"6\" sm={{ span: 4, offset: 4 }} md={{ span: 2, offset: 8 }}>\n              <Link to={`/${HOMEPAGE}/calendar`}>\n                <Button type=\"button\" className=\"btn-outline-secondary me-2\" variant=\"light\">\n                  Cancel\n                </Button>\n              </Link>\n            </Col>\n            <Col xs=\"6\" sm=\"4\" md=\"2\">\n              <Button\n                type=\"submit\"\n                className=\"btn-outline-secondary\"\n                variant=\"light\"\n                disabled={isButtonDisabled}\n              >\n                Create\n              </Button>\n            </Col>\n          </Form.Group>\n        </Form>\n      </Container>\n    </>\n  );\n};\n\nexport default React.memo(CreateEvent);\n","import CreateEvent from './CreateEvent';\n\nexport default CreateEvent;\n","import React, { useState } from 'react';\nimport { Row, Col, Toast } from 'react-bootstrap';\nimport { CheckCircleFill, XCircleFill } from 'react-bootstrap-icons';\nimport { notificationTypes } from '../../constants';\nimport './styles.scss';\n\nconst Notification = ({ data }) => {\n  const [show, setShow] = useState(true);\n\n  // eslint-disable-next-line consistent-return\n  const renderIcon = (type) => {\n    if (type === notificationTypes.success) {\n      return <CheckCircleFill color=\"green\" />;\n    }\n    if (type === notificationTypes.error) {\n      return <XCircleFill color=\"red\" />;\n    }\n  };\n\n  return (\n    <Row>\n      <Col sm={{ span: 6, offset: 6 }} md={{ span: 4, offset: 8 }}>\n        <Toast className=\"toast\" show={show} onClose={() => setShow(false)} delay={3000} autohide>\n          <Toast.Header>\n            { renderIcon(data.type) }\n            <strong className=\"toast__type mr-auto\">{data.type.toUpperCase()}</strong>\n          </Toast.Header>\n          <Toast.Body>{data.text}</Toast.Body>\n        </Toast>\n      </Col>\n    </Row>\n  );\n};\n\nexport default React.memo(Notification);\n","import Notification from './Notification';\n\nexport default Notification;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport UsersSelect from '../../UsersSelect/UsersSelect';\n\nconst AuthModal = ({ users, confirmAuth }) => {\n  const [chosenUser, setChosenUser] = useState(null);\n\n  useEffect(() => {\n    if (users) {\n      setChosenUser(users[0]);\n    }\n  }, [users]);\n\n  const onSelectChange = useCallback((e) => {\n    const selectedName = e.target.value;\n    const selectedUser = users.find((user) => user.name === selectedName);\n\n    setChosenUser(selectedUser);\n  }, [users]);\n\n  return (\n    <Modal className=\"auth-modal\"\n      show\n      backdrop=\"static\"\n      keyboard={false}\n      centered\n    >\n      <Modal.Header>\n        <Modal.Title>Authorization</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <p>Please authorise</p>\n        <UsersSelect className=\"auth-modal__select\" onChange={onSelectChange} users={users} />\n      </Modal.Body>\n\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={() => confirmAuth(chosenUser)}>Confirm</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default React.memo(AuthModal);\n","import AuthModal from './AuthModal';\n\nexport default AuthModal;\n","import { SERVER_URL } from '../constants';\n\nclass Service {\n  constructor() {\n    if (!Service.instance) {\n      this.url = SERVER_URL;\n      this.eventsEntity = 'events';\n      this.usersEntity = 'users';\n      Service.instance = this;\n    }\n\n    return Service.instance;\n  }\n\n  async sendHttpRequest(method, entity, data) {\n    const response = await fetch(`${this.url}/${entity}`, {\n      method,\n      body: JSON.stringify(data),\n      headers: { 'Content-Type': 'application/json' },\n    });\n\n    if (!response.ok) {\n      const message = `${response.status}`;\n      throw new Error(message);\n    }\n\n    return response;\n  }\n\n  async getEvents() {\n    const response = await this.sendHttpRequest('GET', this.eventsEntity);\n    const events = await response.json();\n    return events && events.map((event) => Object.assign(JSON.parse(event.data), { id: event.id }));\n  }\n\n  async createEvent(eventData) {\n    const response = await this.sendHttpRequest('POST', this.eventsEntity, {\n      data: JSON.stringify(eventData),\n    });\n    const event = await response.json();\n    return Object.assign(JSON.parse(event.data), { id: event.id });\n  }\n\n  async deleteEvent(id) {\n    await this.sendHttpRequest('DELETE', `${this.eventsEntity}/${id}`);\n  }\n\n  async getUsers() {\n    const response = await this.sendHttpRequest('GET', this.usersEntity);\n    const users = await response.json();\n    return users && users.map((user) => Object.assign(JSON.parse(user.data), { id: user.id }));\n  }\n\n  async createUser(userData) {\n    const response = await this.sendHttpRequest('POST', this.usersEntity, {\n      data: JSON.stringify(userData),\n    });\n    const user = await response.json();\n    return Object.assign(JSON.parse(user.data), { id: user.id });\n  }\n}\n\nconst service = new Service();\nObject.freeze(service);\nexport default service;\n","import { v4 as uuidv4 } from 'uuid';\nimport service from './Service';\nimport { notificationTypes } from '../constants';\n\nclass NotificationsDecorator {\n  constructor(serviceInstance) {\n    this.service = serviceInstance;\n  }\n\n  async getUsers() {\n    const response = {};\n\n    try {\n      response.data = await this.service.getUsers();\n      response.notification = { id: uuidv4(), type: notificationTypes.success, text: 'Users loaded' };\n    } catch (err) {\n      response.notification = { id: uuidv4(), type: notificationTypes.error, text: `Failed loading users. ${err}` };\n    }\n\n    return response;\n  }\n\n  async getEvents() {\n    const response = {};\n    try {\n      response.data = await this.service.getEvents();\n      response.notification = { id: uuidv4(), type: notificationTypes.success, text: 'Events loaded' };\n    } catch (err) {\n      response.notification = { id: uuidv4(), type: notificationTypes.error, text: `Failed loading events. ${err}` };\n    }\n\n    return response;\n  }\n\n  async deleteEvent(eventId) {\n    const response = {};\n\n    try {\n      await this.service.deleteEvent(eventId);\n      response.data = true;\n      response.notification = { id: uuidv4(), type: notificationTypes.success, text: 'Event deleted' };\n    } catch (err) {\n      response.data = false;\n      response.notification = { id: uuidv4(), type: notificationTypes.error, text: `Failed to delete event. ${err}` };\n    }\n\n    return response;\n  }\n\n  async createEvent(event) {\n    const response = {};\n\n    try {\n      response.data = await this.service.createEvent(event);\n      response.notification = { id: uuidv4(), type: notificationTypes.success, text: 'Event created' };\n    } catch (err) {\n      response.notification = { id: uuidv4(), type: notificationTypes.error, text: `Failed creating event. ${err}` };\n    }\n\n    return response;\n  }\n}\n\nexport default new NotificationsDecorator(service);\n","import React, {\n  useState,\n  useEffect,\n  useCallback,\n  useMemo,\n} from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Calendar from './pages/calendar';\nimport CreateEvent from './pages/createEvent';\nimport Notification from './components/Notification';\nimport AuthModal from './components/modals/AuthModal';\nimport service from './services/NotificationsDecorator';\nimport UserContext from './UserContext';\nimport { deleteUserData, getUserData, setUserData } from './services/sessionStorageApi';\nimport { HOMEPAGE } from './constants';\n\nconst App = () => {\n  const [events, setEvents] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [notifications, setNotifications] = useState([]);\n  const [eventToDelete, setEventToDelete] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [filter, setFilter] = useState('All members');\n\n  useEffect(() => {\n    const authorizedUser = getUserData();\n    if (authorizedUser) {\n      setCurrentUser(authorizedUser);\n    }\n  }, []);\n\n  useEffect(() => {\n    const getEvents = async () => {\n      const response = await service.getEvents();\n      setEvents(response.data);\n      setNotifications((prevValue) => [...prevValue, response.notification]);\n    };\n\n    const getUsers = async () => {\n      const response = await service.getUsers();\n      setUsers(response.data);\n      setNotifications((prevValue) => [...prevValue, response.notification]);\n    };\n\n    getUsers();\n    getEvents();\n  }, []);\n\n  const createEvent = async (eventData) => {\n    const response = await service.createEvent(eventData);\n    if (response.data) {\n      setEvents((prevValue) => {\n        if (prevValue && prevValue.length) {\n          return [...prevValue, response.data];\n        }\n        return [response.data];\n      });\n    }\n    setNotifications((prevValue) => [...prevValue, response.notification]);\n    return response.data;\n  };\n\n  const deleteEvent = useCallback(async (eventId) => {\n    setEventToDelete(null);\n\n    const response = await service.deleteEvent(eventId);\n\n    if (response.data) {\n      setEvents((prevValue) => prevValue.filter((event) => event.id !== eventId));\n    }\n\n    setNotifications((prevValue) => [...prevValue, response.notification]);\n  }, []);\n\n  const showDeleteModal = useCallback((event) => {\n    setEventToDelete(event);\n  }, []);\n\n  const cancelDelete = useCallback(() => {\n    setEventToDelete(null);\n  }, []);\n\n  const confirmAuth = useCallback((user) => {\n    if (user) {\n      setCurrentUser(user);\n      setUserData(user);\n    }\n  }, []);\n\n  const logOut = useCallback(() => {\n    setCurrentUser(null);\n    setFilter('All members');\n    deleteUserData();\n  }, []);\n\n  const filterUsers = useCallback((e) => {\n    const filterValue = e.target.value;\n    setFilter(filterValue);\n  }, []);\n\n  const isExistingEvent = (eventDay, eventTime) => (\n    events && events.find((userEvent) => userEvent.day === eventDay && userEvent.time === eventTime)\n  );\n\n  const currentUserValue = useMemo(() => [currentUser, setCurrentUser], [currentUser]);\n\n  const filteredEvents = useMemo(() => (\n    filter !== 'All members' && events ? events.filter((userEvent) => userEvent.participants.includes(filter)) : events\n  ), [events, filter]);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        { !currentUser\n          ? <AuthModal confirmAuth={confirmAuth} users={users} />\n          : (\n            <Switch>\n              <Route path={`/${HOMEPAGE}/calendar`}>\n                <UserContext.Provider value={currentUserValue}>\n                  <Calendar\n                    users={users}\n                    events={filteredEvents}\n                    showDeleteModal={showDeleteModal}\n                    eventToDelete={eventToDelete}\n                    cancelDelete={cancelDelete}\n                    deleteEvent={deleteEvent}\n                    confirmAuth={confirmAuth}\n                    logOut={logOut}\n                    filterUsers={filterUsers}\n                    filter={filter}\n                  />\n                </UserContext.Provider>\n              </Route>\n              <Route path={`/${HOMEPAGE}/create-event`}>\n                <CreateEvent users={users} isExistingEvent={isExistingEvent} createEvent={createEvent} />\n              </Route>\n            </Switch>\n          )}\n        { notifications && (\n          <Container className=\"toast-container\">\n            { notifications.map((notification) => <Notification key={notification.id} data={notification} />)}\n          </Container>\n        )}\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import { USER_STORAGE_KEY } from '../constants';\n\nexport const getUserData = () => JSON.parse(sessionStorage.getItem(USER_STORAGE_KEY));\nexport const setUserData = (user) => sessionStorage.setItem(USER_STORAGE_KEY, JSON.stringify(user));\nexport const deleteUserData = () => sessionStorage.removeItem(USER_STORAGE_KEY);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}